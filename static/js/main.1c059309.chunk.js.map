{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/About.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","color","onClick","className","style","backgroundColor","defaultProps","Header","title","onShow","show","Footer","About","exact","to","Task","task","deleteTask","toggleTask","id","reminder","window","confirm","day","Tasks","tasks","onDelete","onToggle","map","index","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","currentTarget","checked","Search","onSearch","resetInputField","App","setTasks","setShow","useEffect","a","fetchTasks","tasksApi","getTasks","fetch","process","method","res","json","data","fetchTaskById","addTask","headers","body","JSON","stringify","filter","taskFetch","updateTask","activeClassName","path","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c059309.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({text, color, onClick}) => {\r\n  return <button className='btn edge' style={{backgroundColor: color}} onClick={onClick}>{text}</button>\r\n}\r\n\r\nButton.defaultProps = {\r\n\r\n}\r\n\r\nButton.propTypes = {\r\n  color: PropTypes.string,\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nconst Header = ({ title, onShow, show }) => {\r\n  return (\r\n    <header className='header'>\r\n      <h1>{title}</h1>\r\n      <Button\r\n      color={show ? 'red': 'green'}\r\n      text={show ? 'Close task' : 'Add Task'} \r\n      onClick={onShow} />\r\n    </header>\r\n  )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: 'Task tracker'\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header\r\n","const Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>Copyright &copy; 2021</p>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { NavLink } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h3>Version 1.0</h3>\r\n      <NavLink exact to='/react-training-app/'>Go back</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import { AiOutlineBorder, AiOutlineCheckSquare, AiFillDelete } from \"react-icons/ai\";\r\n\r\nconst Task = ({task, deleteTask, toggleTask}) => {\r\n  return (\r\n    <div className='task'>\r\n      <div className='flex'>\r\n        <h3>{task.text}</h3>\r\n        <div className='flex'>\r\n          <button className='btn' style={{backgroundColor: 'gold'}} onClick={() => toggleTask(task.id)}>\r\n            {task.reminder ? <AiOutlineCheckSquare /> : <AiOutlineBorder />}\r\n          </button>\r\n          <button className='btn' style={{backgroundColor: 'tomato'}} onClick={() => {if (window.confirm('Are you sure you wish to delete this item?')) deleteTask(task.id)}}>\r\n            <AiFillDelete />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({tasks, onDelete, onToggle}) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task, index) => (\r\n        <Task \r\n        key={index} \r\n        task={task} \r\n        deleteTask={onDelete}\r\n        toggleTask={onToggle}\r\n        />\r\n      ))} \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({onAdd}) => {\r\n  const [text, setText] = useState('')\r\n  const [day, setDay] = useState('')\r\n  const [reminder, setReminder] = useState(false)\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (!text) {\r\n      alert('Please add task name')\r\n      return\r\n    }\r\n\r\n    onAdd({text, day, reminder})\r\n    setText('')\r\n    setDay('')\r\n    setReminder(false)\r\n  }\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className='form-control'>\r\n        <label>Task Name</label>\r\n        <input type='text' \r\n        placeholder='Task name' \r\n        value={text} \r\n        onChange={(e) => setText(e.target.value)} />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Date & Time</label>\r\n        <input type='text' placeholder='Date & Time' \r\n        value={day} \r\n        onChange={(e) => setDay(e.target.value)} />\r\n      </div>\r\n      <div className='form-control form-control-check'>\r\n        <label>Set reminder</label>\r\n        <input type='checkbox' value={reminder} \r\n        onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n      </div>\r\n      <div className='form-control'>\r\n        <input type='submit' value='Save task' className='btn btn-block' />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from \"react\"\r\n\r\nconst Search = ({onSearch}) => {\r\n  const [text, setText] = useState('')\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    onSearch(text)\r\n    resetInputField()\r\n  }\r\n  const onChange = (e) => {\r\n    setText(e.target.value)\r\n  }\r\n  const resetInputField = () => {\r\n    setText('')\r\n  }\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className='form-control'>\r\n        <h2>Search</h2>\r\n        <input type='text' onChange={onChange} value={text} placeholder='Task name' />\r\n        <input type='submit' value='Search' className='btn' style={{backgroundColor:'royalblue'}} />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","import Header from './components/Header'\r\nimport Footer from './components/Footer'\r\nimport About from './components/About'\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from './components/AddTask'\r\nimport Search from './components/Search'\r\nimport { useEffect, useState } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  NavLink\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([])\r\n  const [show, setShow] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      const tasksApi = await fetchTasks()\r\n      setTasks(tasksApi)\r\n    }\r\n    getTasks()\r\n  }, [])\r\n\r\n  const fetchTasks = async () => {\r\n    const res = await fetch(`${process.env.REACT_APP_API}`, {\r\n      method: 'GET'\r\n    })\r\n    const data = await res.json()\r\n    return data\r\n  }\r\n\r\n  const fetchTaskById = async (id) => {\r\n    const res = await fetch(`${process.env.REACT_APP_API}/${id}`, {\r\n      method: 'GET'\r\n    })\r\n    const data = await res.json()\r\n    return data\r\n  }\r\n\r\n  const addTask = async (task) => {\r\n    const res = await fetch(`${process.env.REACT_APP_API}`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(task)\r\n    })\r\n\r\n    const data = await res.json()\r\n    setTasks([...tasks, data])\r\n  }\r\n\r\n  const deleteTask = async (id) => {\r\n    await fetch(`${process.env.REACT_APP_API}/${id}`,\r\n    {\r\n      method: 'DELETE'\r\n    })\r\n    setTasks(tasks.filter((task) => task.id !== id))\r\n  }\r\n\r\n  const toggleTask = async (id) => {\r\n    const taskFetch = await fetchTaskById(id)\r\n    const updateTask = {...taskFetch, reminder: !taskFetch.reminder}\r\n    const res = await fetch(`${process.env.REACT_APP_API}/${id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(updateTask)\r\n    })\r\n    const data = await res.json()\r\n    setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder} : task ))\r\n  }\r\n\r\n  const onSearch = async (text) => {\r\n    const res = await fetch(`${process.env.REACT_APP_API}?q=${text}`, {\r\n      method: 'GET'\r\n    })\r\n\r\n    const data = await res.json()\r\n    setTasks(data)\r\n  }\r\n\r\n  const onShow = () => {\r\n    setShow(!show)\r\n  }\r\n\r\n  return (\r\n    <Router>\r\n        <div className='container'>\r\n          <nav>\r\n            <ul>\r\n              <li>\r\n                <NavLink exact to='/react-training-app/' activeClassName='active'>Home</NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink exact to='/react-training-app/about' activeClassName='active'>About</NavLink>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          <Route exact path='/react-training-app/'>\r\n            <Header onShow={onShow} show={show} />\r\n            {show && <AddTask onAdd={addTask} />}\r\n            <Search onSearch={onSearch}/>\r\n            {tasks.length > 0 ?\r\n            <Tasks \r\n            tasks={tasks} \r\n            onDelete={deleteTask}\r\n            onToggle={toggleTask}\r\n            /> : <p>No task to show</p>}\r\n          </Route>\r\n          <Route exact path='/react-training-app/about'>\r\n            <About />\r\n          </Route>\r\n          <Footer />\r\n        </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}